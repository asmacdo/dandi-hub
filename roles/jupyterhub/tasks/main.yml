---
# configure and create jupyterhub
- name: Create security token
  command: openssl rand -hex 32
  register: os

- name: Create config file for JupyterHub
  template:
    src: config.yaml.j2
    dest: /home/ec2-user/{{ namespace }}/config.yaml

- name: Add JupyterHub Helm Chart repo
  command: helm repo add {{ helm_chart_repo_name }} {{ helm_chart_repo_url }}
  args:
    chdir: /home/ec2-user/{{ namespace }}

- name: Update Helm chart repos
  command: helm repo update
  args:
    chdir: /home/ec2-user/{{ namespace }}

- name: Check for JupyterHub helm release
  command: helm list
  register: hl_log
  changed_when: False

- name: Install JupyterHub release
  shell: helm install {{ namespace }}-jupyterhub {{ helm_chart_repo_name }}/jupyterhub \
    --debug \
    --version={{ jupyterhub_chart_version }} \
    --namespace={{ namespace }} \
    --timeout=10m
    -f config.yaml
  args:
    chdir: /home/ec2-user/{{ namespace }}
  when: hl_log.stdout.find(namespace + '-jupyterhub') == -1

## Wait for proxy to spin up ##
- name: sleep for 30 seconds and continue with play
  wait_for: timeout=30
  delegate_to: localhost

- name: Get URL for public proxy
  command: kubectl --namespace={{ namespace }} describe svc proxy-public
  register: pp_log
  until: pp_log.stdout.find('Ensured load balancer') != -1
  retries: 10
  delay: 60

- debug: msg="Navigate browser to {{ pp_log.stdout_lines[20] }} to begin using JupyterHub!"
